#!/usr/bin/env bash

alias envsetup='source $SRC_DIR/build/envsetup.sh'

function lunch_() {
    if [ $# -gt 0 ]; then
        lunch "$@"
        return 0
    fi

    local lunch_release
    if isAtLeastU && lunch_release="$(getLunchRelease)"; then
        lunch_release="-$lunch_release"
    fi

    italic 'Modify, if needed, and press enter to continue.'
    printf "\n\n"
    read -re \
        -p 'lunch ' \
        -i "${LUNCH_SYSTEM}_${LUNCH_DEVICE}$lunch_release-${LUNCH_FLAVOR}" \
        input

    lunch "$input"
}

################### User's .bash_profile ####################
#                      !!! WARNING !!!                      #
#          DO NOT ADD ANYTHING BELOW THIS COMMENT!          #
#  ALLOW END USERS TO OVERRIDE ANYTHING DECLARED ABOVE IT!  #
#############################################################
# shellcheck disable=SC1091
source /mnt/misc/.bash_profile

function bold() {
    printf -- "$(tput bold)%s$(tput sgr0)" "${1-}"
}

function italic() {
    printf -- "$(tput sitm)%s$(tput ritm)" "${1-}"
}

function toBoolean() {
    [ "${1-}" -eq 1 ] && echo 'true' || echo 'false'
}

function setupOutDir() {
    local out=$SRC_DIR/out
    if [ ! -L "$out" ]; then
        # Point the host "out" directory to "src/out" directory via a symlink,
        # which lines up with the default AOSP directory structure
        ln -s "$OUT_DIR_VOLUME" "$out" || return $?
    fi
}

function isAtLeastU() {
    [[ ${ANDROID_VERSION%%.*} -ge 14 ]]
}

function getLunchRelease() {
    local build_id lunch_release;
    build_id="$(grep --max-count=1 'BUILD_ID=' "$SRC_DIR"/build/core/build_id.mk)" &&
    lunch_release="$(sed -n 's/BUILD_ID=\([^\.]\+\).*/\L\1/p' <<< "$build_id")" &&
    [ -n "$lunch_release" ] && echo "$lunch_release"
}

[ "$SPLASH_SCREEN" = '1' ] && cat <<- EOL

$(bold "*** Welcome to ContainerizedAndroidBuilder ***")
    $(bold '•') Current version: $APP_VERSION
    $(bold '•') Docker image version: $IMAGE_VERSION

$(bold 'Current environment settings')
    $(bold '•') Timezone: $TZ
    $(bold '•') Ccache enabled: $(toBoolean "$USE_CCACHE")
    $(bold '•') Ccache size: $CCACHE_SIZE

$(bold 'Current build settings')
    $(bold '•') Android version: $ANDROID_VERSION
    $(bold '•') Lunch: $(italic '(system)') $LUNCH_SYSTEM $(italic '(device)') $LUNCH_DEVICE $(italic '(flavor)') $LUNCH_FLAVOR \
$(italic '(branch)') $(isAtLeastU && getLunchRelease || echo '-')
    $(bold '•') Move to zips directory: $(toBoolean "$MOVE_ZIPS")

$(bold 'Current Android source Repo settings')
    $(bold '•') URL: $__REPO_URL__
    $(bold '•') Revision: $__REPO_REVISION__

$(bold 'Aliases & commands')

    $(bold 'envsetup')
        Same as running $(italic 'source SRC_DIR/build/envsetup.sh') script to set up the
        build environment.

    $(bold 'lunch_')
        Shorthand to $(italic 'lunch system_device-flavor') command that, when executed,
        will print something like $(italic 'lunch aosp_marlin-userdebug') but with your
        build values, allowing you to edit it before running it.

EOL

setupOutDir || exit $?
